-----------installations in ubuntu -----------

--- git installation:

apt-get install git
 

---jenkins install :

sudo apt update

sudo apt install openjdk-8-jdk

wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -

sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'

sudo apt update

sudo apt install jenkins	

systemctl status jenkins


---docker install :

docker in ubuntu :

apt-get update

apt install default-jdk

curl -fsSL https://get.docker.com -o get-docker.sh

sh get-docker.sh

sudo usermod -aG docker root 


----docker-compose in ubuntu:

sudo curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose

sudo chmod +x /usr/local/bin/docker-compose

docker-compose --version


---mysql installation :

1.First, update the apt package index by typing:
  sudo apt-get update

2.Then install the MySQL package with the following command:
   sudo apt-get install mysql-server

3.Once the installation is completed, the MySQL service will start automatically. To check whether the MySQL server is running, type
   sudo systemctl status mysql

4.MySQL server package comes with a script called mysql_secure_installation that can perform several security-related operations.
  sudo mysql_secure_installation

8. after login to mysql server, craete jenkins user to run mysql script through jenkins
    CREATE USER 'jenkins'@'%' IDENTIFIED BY '1234';
    GRANT ALL PRIVILEGES ON *.* TO 'jenkins'@'%' WITH GRANT OPTION;
    FLUSH PRIVILEGES;
    SELECT User,Host FROM mysql.user;

5. To take backup use followung command 
   mysqldump -u root -p <db_name> /destionation/..


6. To uninstall mysql server in ubuntu
   sudo apt-get remove --purge mysql*
   sudo apt-get purge mysql*
   sudo apt-get autoremove
   sudo apt-get autoclean
   sudo apt-get remove dbconfig-mysql

7. installing again
   sudo apt-get dist-upgrade
   sudo apt-get install mysql-server


---aws cli installation:

1.first check python version 
  python3 --version

2.install python3
  sudo apt-get install python3

3.install pip3 using python
   apt install python3-pip 

5.Now you can test to verify that pip is installed correctly
  pip3 --version

6.Install the AWS CLI with pip
  pip3 install awscli --upgrade

7.Verify that the AWS CLI installed correctly.
    aws --version


 

-------- installations in linux---------

--- git installation:

apt-get install git


--- jenkins install :

yum update

sudo yum install java-1.8.0-openjdk-devel

wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat-stable/jenkins.repo

sudo rpm --import https://jenkins-ci.org/redhat/jenkins-ci.org.key

sudo yum install jenkins

sudo systemctl start jenkins

systemctl status jenkins


--docker install :

sudo yum update -y

sudo amazon-linux-extras install docker

sudo service docker start

sudo usermod -a -G docker ec2-user

docker info


----docker-compose install :

sudo curl -L https://github.com/docker/compose/releases/download/1.21.2/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose

sudo chmod +x /usr/local/bin/docker-compose

docker-compose --version

Note: If the command docker-compose fails after installation, check your path. You can also create a symbolic link to /usr/bin or any other directory in your path,
cp /usr/local/bin/docker-compose /usr/bin/docker-compose




--docker commands ----

docker images : to show docker images

dockers ps : to show running container

docker ps -a : to show all stopped and runing container
 
docker info | grep -i root : to show exact path of docker install

docker pull images_name : to download image

docker-compose up -d : to run docker container 

docker network ls : to show docker networks 

docker logs 
